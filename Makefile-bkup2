#------- Directories -------#

SRCBASE = src
SOURCEDIRS = src/geometry
INCBASE = inc

BIN = bin
TESTDIR = $(SRCBASE)/test
EXDIR = $(SRCBASE)/exercises

SRCDIRS = geometry/
LIBDIR = -L./lib
LIB = ./lib/libgeolib.a
INCLUDES = -I./inc/

CC = gcc
CCFLAGS = -g -Wall $(INCLUDES)

MYLIBS = -lgeolib
CLIBS = -lm

#------ Suffix Rules -------#

#.SUFFIXES: .c

#.c.o:
#	$(CC) $(CCFLAGS) -c $<

#------ Dependencies -------#

SRC := $(SRCBASE)/geometry/tuple.c $(SRCBASE)/geometry/gmaths.c \

# unit tests
TESTS_SRC = $(wildcard $(TESTDIR)/*.c)

# exercises
EX_SRC = $(wildcard $(EXDIR)/*.c)

# src files are in various folders in the ./src/ directory depending
# on the role the code plays: ./src/geometry, ./src/graphics etc
# this places all .o files in ./obj/, removing the folder structure
# from ./src/
OBJ = $(addprefix ./obj/, $(addsuffix .o, $(notdir $(basename $(SRC)))))
OBJS := $(patsubst %.c, obj/%.o, $(notdir $(SRC)))

TESTS = $(addprefix ./bin/, $(notdir $(TESTS_SRC:.c=)))
EXERCISES = $(addprefix ./bin/, $(notdir $(EX_SRC:.c=)))

#--------- RULES ----------#

vpath .c $(SOURCEDIRS)

# make obj directory if needed
$(OBJS): | obj

obj:
	@mkdir -p $@

obj/%.o : %.c
	@echo $<
	@$(CC) $(CCFLAGS) -c $< -o $@

library: $(OBJS)
	@echo $(OBJS)
	ar rcs $(LIB) $(OBJS)

testsuite: $(OBJS)
	@echo $(SRC)
	@echo $(OBJS)
	
ex1: library src/test/tupletest.c
	$(CC) src/test/tupletest.c $(CCFLAGS) $(INCLUDES) $(LIBDIR) -o bin/ex1 $(MYLIBS) $(CLIBS)
	

